#!/bin/bash

PROJECT=moz-fx-data-backfill-14

set -x

bq mk $PROJECT:payload_bytes_decoded

for dataset in $(bq ls -n 1000 --project_id=moz-fx-data-shared-prod | grep 'payload_bytes_error'); do
    bq mk $PROJECT:$dataset
    for table in $(bq ls -n 1000 --project_id=moz-fx-data-shared-prod $dataset | grep TABLE | awk '{print $1}'); do
        #bq rm -f $PROJECT:$dataset.$table
        bq mk -t \
           --time_partitioning_field=submission_timestamp \
           --clustering_fields=submission_timestamp \
           --schema <(bq show --format=json moz-fx-data-shared-prod:$dataset.$table | jq '.schema.fields') \
           $PROJECT:$dataset.$table
    done
done

for dataset in $(bq ls -n 1000 --project_id=moz-fx-data-shared-prod | grep 'telemetry_stable'); do
    bq mk $PROJECT:$dataset
    for table in $(bq ls -n 1000 --project_id=moz-fx-data-shared-prod $dataset | grep TABLE | awk '{print $1}' | grep main_v4); do
        #bq rm -f $PROJECT:$dataset.$table
        bq mk -t \
           --time_partitioning_field=submission_timestamp \
           --clustering_fields=normalized_channel,sample_id \
           --schema <(bq show --format=json moz-fx-data-shared-prod:$dataset.$table | jq '.schema.fields') \
           $PROJECT:$dataset.$table
    done
done
